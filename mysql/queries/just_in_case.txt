Using MySQL Workbench, students will forward engineer an ERD to create a MySQL database.
Students will use MySQLWorkbench to connect to their localhost.
Students will write and execute SQL INSERT, SELECT, UPDATE and DELETE statements using the database created.
Querying a Database for a CRUD Application
CRUD stands for Create, Read, Update and Delete. These are the four main ways we interact with a database. If you are dealing with a SQL database, this involves the commands INSERT, SELECT, UPDATE, and DELETE which you've already read about. For this assignment, you will use MySQL workbench to create an ERD model, then forward engineer it to create a database. Next, you will query the database using SQL commands. These are the commands you would use to create a CRUD application, or an application where you can manipulate data stored in a database.

First, create a new ERD model called names, that is, change it from the default my_db! Create a new diagram for a table also called names like below:


Next you will forward engineer your model to create a database. Then go ahead and complete all the CRUD queries, by completing the assignment tasks. To submit, create a text file and copy and paste commands you used to query the database. Upload the text file below.

Helpful Tips
Once you've forward engineered your database, and navigated to your local instance, you may not see it in your list of schemas right away. If not, hit the refresh icon, and it should appear. 

Whenever you write a query in MySQL workbench, it will execute it on the selected database. The only indication of which database is selected is that it is in bold. In order to execute any queries, be sure you have double-clicked the name of the schema, or database, you want to use. In the example below the "names" database is selected. 

Remember: It's always okay to look up the syntax for SQL statements whenever you forget. In fact, looking up syntax is very commonplace even for seasoned developers, especially those that don't tend to use SQL every day. The important part is to become familiar with how databases are structured and be able to query a database to fetch and alter the data you want.


Write the query to select all the names in the database. The columns should appear, even if there are no records in the database yet.

Insert your own name into the database!

Insert another name or, NINJA BONUS: insert more than one name in a single statement.

Optional: Try creating, updating and deleting records using the statements you've learn about.




Assignment: Users
''Learning Objectives:

Students will create databases using the three types of relationships.
Students will use SQL queries.
In the previous chapter, you created users_schema. Now, you'll get the chance to forward engineer this schema, and use queries to manipulate the database.


If you get stuck on retrieving, changing, sorting, or deleting users, be sure to apply the 20 minute rule! Try re-reading the previous modules and doing research on your own, then reaching out to your peers on Discord, and finally setting up some time with a Coding Dojo staff member so that you talk through the challenge you're facing.

Forward engineer the users_schema you created in the previous chapter

Create a .txt file where you'll save each of the queries you'll run in the workbench

Query: Create 3 new users

Query: Retrieve all the users

Query: Retrieve the first user using their email address

Query: Retrieve the last user using their id

Query: Change the user with id=3 so their last name is Pancakes

Query: Delete the user with id=2 from the database

Query: Get all the users, sorted by their first name

BONUS Query: Get all the users, sorted by their first name in descending order

Submit your .txt file that contains all the queries you ran in the workbench




Assignment: Dojos and Ninjas
Welcome to another Core assignment! Some students like to explore the assignments before they're finished reading through the lessons, and that's okay! It can be good for your brain to have a preview of what your future challenges might be. However, before you begin this assignment, it's important that you've first:

Completed the preceding lesson modules
Taken the knowledge checks to confirm your understanding
Viewed lecture material related to the assignment topics
Completed and submitted your practice assignments
Now, the Assignment:
''Learning Objectives:

Students will create databases using the three types of relationships.

Students will use SQL queries.

In the previous chapter, you created the dojos_and_ninjas_schema. Now, you'll get the chance to forward engineer this schema, and use queries to manipulate the database. Try to put yourself in the mindset of a software engineer working at Coding Dojo. In this role, you need to manage the data Coding Dojo has on their Dojo locations, and the Ninjas who take classes at each site.


If you get stuck on retrieving, changing, or deleting dojos and ninjas, be sure to apply the 20 minute rule! Try re-reading the previous modules and doing research on your own, then reaching out to your peers on Discord, and finally setting up some time with a Coding Dojo staff member so that you talk through the challenge you're facing.

Forward engineer the dojos_and_ninjas_schema from the previous chapter

Create a .txt file where you'll save each of your queries from below

Query: Create 3 new dojos

Query: Delete the 3 dojos you just created

Query: Create 3 more dojos

Query: Create 3 ninjas that belong to the first dojo

Query: Create 3 ninjas that belong to the second dojo

Query: Create 3 ninjas that belong to the third dojo

Query: Retrieve all the ninjas from the first dojo

Query: Retrieve all the ninjas from the last dojo

Query: Retrieve the last ninja's dojo

Submit your .txt file that contains all the queries you ran in the shell